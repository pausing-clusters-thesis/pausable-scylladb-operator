// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	pausingv1alpha1 "github.com/pausing-clusters-thesis/pausable-scylladb-operator/pkg/api/pausing/v1alpha1"
	scheme "github.com/pausing-clusters-thesis/pausable-scylladb-operator/pkg/client/pausing/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ScyllaDBDatacenterClaimsGetter has a method to return a ScyllaDBDatacenterClaimInterface.
// A group's client should implement this interface.
type ScyllaDBDatacenterClaimsGetter interface {
	ScyllaDBDatacenterClaims(namespace string) ScyllaDBDatacenterClaimInterface
}

// ScyllaDBDatacenterClaimInterface has methods to work with ScyllaDBDatacenterClaim resources.
type ScyllaDBDatacenterClaimInterface interface {
	Create(ctx context.Context, scyllaDBDatacenterClaim *pausingv1alpha1.ScyllaDBDatacenterClaim, opts v1.CreateOptions) (*pausingv1alpha1.ScyllaDBDatacenterClaim, error)
	Update(ctx context.Context, scyllaDBDatacenterClaim *pausingv1alpha1.ScyllaDBDatacenterClaim, opts v1.UpdateOptions) (*pausingv1alpha1.ScyllaDBDatacenterClaim, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, scyllaDBDatacenterClaim *pausingv1alpha1.ScyllaDBDatacenterClaim, opts v1.UpdateOptions) (*pausingv1alpha1.ScyllaDBDatacenterClaim, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*pausingv1alpha1.ScyllaDBDatacenterClaim, error)
	List(ctx context.Context, opts v1.ListOptions) (*pausingv1alpha1.ScyllaDBDatacenterClaimList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *pausingv1alpha1.ScyllaDBDatacenterClaim, err error)
	ScyllaDBDatacenterClaimExpansion
}

// scyllaDBDatacenterClaims implements ScyllaDBDatacenterClaimInterface
type scyllaDBDatacenterClaims struct {
	*gentype.ClientWithList[*pausingv1alpha1.ScyllaDBDatacenterClaim, *pausingv1alpha1.ScyllaDBDatacenterClaimList]
}

// newScyllaDBDatacenterClaims returns a ScyllaDBDatacenterClaims
func newScyllaDBDatacenterClaims(c *PausingV1alpha1Client, namespace string) *scyllaDBDatacenterClaims {
	return &scyllaDBDatacenterClaims{
		gentype.NewClientWithList[*pausingv1alpha1.ScyllaDBDatacenterClaim, *pausingv1alpha1.ScyllaDBDatacenterClaimList](
			"scylladbdatacenterclaims",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *pausingv1alpha1.ScyllaDBDatacenterClaim { return &pausingv1alpha1.ScyllaDBDatacenterClaim{} },
			func() *pausingv1alpha1.ScyllaDBDatacenterClaimList {
				return &pausingv1alpha1.ScyllaDBDatacenterClaimList{}
			},
		),
	}
}
